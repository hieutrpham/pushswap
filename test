#!/usr/bin/env bash

yell=$(tput setaf 178)
green=$(tput setaf 2)
reset=$(tput setaf 255)
red=$(tput setaf 9)

bin="./push_swap"
checker="./checker_linux"
exception="-219637250 -470370703 34950365 -126310329 -1355179666 214488796 -1438005774 -1924502727 -1345409344 145633791 -1999352909 -1226576909 173681251 -896058709 -1707454823 -1713187832 -1794120699 -1051535247"
max_range=2147483647

randomize() {
	shuf -i0-$max_range -n$1 | while IFS=' ' read -r num; do
	if ((num % 2 != 0))
	then ((num*=-1))
	fi
	echo $num
done
}

test() {
	local num=$1
	local times=$2
	local min=99999
	local max=0
	local avg=0

	for ((i=0; i<times; i++)); do
		arg=$(randomize $num | tr '\n' ' ')
		op=$($bin $arg | wc -l)
		if ((op <= min)); then min=$op; fi
		if ((op >= max)); then max=$op; fi
		((avg+=$op))
	done

	printf "${yell}======testing for $num random numbers $times times======${reset}\n"
	echo "average: " $((avg/$times))
	echo "min: " $min
	echo "max: " $max
	echo
}

check() {
	local num=$1
	local times=$2

	local pass=true
	printf "${yell}======checking for $num random numbers $times times======${reset}\n"
	for ((i=0; i<times; i++)); do
		arg=$(randomize $num | tr '\n' ' ')
		op=$($bin $arg | $checker $arg)
		if [[ "$op" == "KO" ]]; then
			pass=false
		fi
	done
	if $pass; then
		printf "${green}OK${reset}\n"
	else
		printf "${red}KO${reset}\n"
	fi
}

main() {
	check 3 1000
	check 5 1000
	check 100 100
	check 500 100
	test 3 1000
	test 5 1000
	test 100 100
	test 500 100
}

main "$@"
